name: ci
on:
  pull_request:
    types: [opened, reopened, synchronize, ready_for_review, review_requested]
    branches:
      - master
  push:
    branches:
      - master
      - prepare-release

permissions:
  contents: read

jobs:
  test:
    name: Test go${{ matrix.goVersion}}.x ${{ matrix.goArch }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - goVersion: "1"
            GOARCH: "amd64"
            SKIP_PYTHON_BINDINGS_TESTS: "0"
          # - goVersion: "1"
          #   GOARCH: "arm64"
          #   SKIP_PYTHON_BINDINGS_TESTS: "0"
          # - goVersion: "1"
          #   GOARCH: "386"
          #   SKIP_PYTHON_BINDINGS_TESTS: "1"
          # - goVersion: "1"
          #   GOARCH: "ppc64le"
          #   SKIP_PYTHON_BINDINGS_TESTS: "0"
          - goVersion: "1.24"
            GOARCH: "amd64"
            SKIP_PYTHON_BINDINGS_TESTS: "0"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.goVersion }}
      - run: sudo apt install python3-dev python3-setuptools
      - run: pip install -U wheel
      - run: pip install -U pytest setuptools
      - run: make install.dependencies
      - run: make test
        env:
          GOARCH: ${{ matrix.GOARCH }}
          CGO_ENABLED: "1"
          SKIP_PYTHON_BINDINGS_TESTS: ${{ matrix.SKIP_PYTHON_BINDINGS_TESTS }}

  bazel:
    name: bazel test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cache/bazel
            ~/.cache/bazelisk
          key: ${{ runner.os }}-bazel-cache
      - run: bazelisk build --lockfile_mode=error //...
      - run: bazelisk test --lockfile_mode=error //...

  all:
    name: Check all
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: sudo apt install python3-dev python3-setuptools
      - run: pip install -U wheel
      - run: pip install -U pytest setuptools
      # - uses: golangci/golangci-lint-action@v2
      #   with:
      #     version: v1.30.0
      - run: make all
      - name: Install goveralls
        run: |
          export GOPATH=$GITHUB_WORKSPACE
          go install github.com/mattn/goveralls@v0.0.12
      - name: Send coverage
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ./bin/goveralls -coverprofile=coverage.out -service=github

  goreleaser:
    name: Goreleaser
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: goreleaser/goreleaser-action@90a3faa9d0182683851fbfa97ca1a2cb983bfca3 # v6.2.1
        with:
          args: release --snapshot --skip=publish --clean
